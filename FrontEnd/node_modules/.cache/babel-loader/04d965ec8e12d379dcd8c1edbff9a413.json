{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar canReportError_1 = require(\"./util/canReportError\");\n\nvar toSubscriber_1 = require(\"./util/toSubscriber\");\n\nvar observable_1 = require(\"./symbol/observable\");\n\nvar pipe_1 = require(\"./util/pipe\");\n\nvar config_1 = require(\"./config\");\n\nvar Observable = function () {\n  function Observable(subscribe) {\n    this._isScalar = false;\n\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  Observable.prototype.lift = function (operator) {\n    var observable = new Observable();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  };\n\n  Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n    var operator = this.operator;\n    var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(this.source || config_1.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  };\n\n  Observable.prototype._trySubscribe = function (sink) {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n\n      if (canReportError_1.canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  };\n\n  Observable.prototype.forEach = function (next, promiseCtor) {\n    var _this = this;\n\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var subscription;\n      subscription = _this.subscribe(function (value) {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    });\n  };\n\n  Observable.prototype._subscribe = function (subscriber) {\n    var source = this.source;\n    return source && source.subscribe(subscriber);\n  };\n\n  Observable.prototype[observable_1.observable] = function () {\n    return this;\n  };\n\n  Observable.prototype.pipe = function () {\n    var operations = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operations[_i] = arguments[_i];\n    }\n\n    if (operations.length === 0) {\n      return this;\n    }\n\n    return pipe_1.pipeFromArray(operations)(this);\n  };\n\n  Observable.prototype.toPromise = function (promiseCtor) {\n    var _this = this;\n\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var value;\n\n      _this.subscribe(function (x) {\n        return value = x;\n      }, function (err) {\n        return reject(err);\n      }, function () {\n        return resolve(value);\n      });\n    });\n  };\n\n  Observable.create = function (subscribe) {\n    return new Observable(subscribe);\n  };\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nfunction getPromiseCtor(promiseCtor) {\n  if (!promiseCtor) {\n    promiseCtor = config_1.config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}","map":{"version":3,"sources":["../src/internal/Observable.ts"],"names":[],"mappings":";;;;;;AAIA,IAAA,gBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAGA,IAAA,YAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAQA,IAAA,UAAA,GAAA,YAAA;AAkBE,WAAA,UAAA,CAAY,SAAZ,EAAyF;AAflF,SAAA,SAAA,GAAqB,KAArB;;AAgBL,QAAI,SAAJ,EAAe;AACb,WAAK,UAAL,GAAkB,SAAlB;AACD;AACF;;AAyBD,EAAA,UAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAQ,QAAR,EAAgC;AAC9B,QAAM,UAAU,GAAG,IAAI,UAAJ,EAAnB;AACA,IAAA,UAAU,CAAC,MAAX,GAAoB,IAApB;AACA,IAAA,UAAU,CAAC,QAAX,GAAsB,QAAtB;AACA,WAAO,UAAP;AACD,GALD;;AA4IA,EAAA,UAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,cAAV,EACU,KADV,EAEU,QAFV,EAE+B;AAErB,QAAA,QAAA,GAAA,KAAA,QAAA;AACR,QAAM,IAAI,GAAG,cAAA,CAAA,YAAA,CAAa,cAAb,EAA6B,KAA7B,EAAoC,QAApC,CAAb;;AAEA,QAAI,QAAJ,EAAc;AACZ,MAAA,IAAI,CAAC,GAAL,CAAS,QAAQ,CAAC,IAAT,CAAc,IAAd,EAAoB,KAAK,MAAzB,CAAT;AACD,KAFD,MAEO;AACL,MAAA,IAAI,CAAC,GAAL,CACE,KAAK,MAAL,IAAgB,QAAA,CAAA,MAAA,CAAO,qCAAP,IAAgD,CAAC,IAAI,CAAC,kBAAtE,GACA,KAAK,UAAL,CAAgB,IAAhB,CADA,GAEA,KAAK,aAAL,CAAmB,IAAnB,CAHF;AAKD;;AAED,QAAI,QAAA,CAAA,MAAA,CAAO,qCAAX,EAAkD;AAChD,UAAI,IAAI,CAAC,kBAAT,EAA6B;AAC3B,QAAA,IAAI,CAAC,kBAAL,GAA0B,KAA1B;;AACA,YAAI,IAAI,CAAC,eAAT,EAA0B;AACxB,gBAAM,IAAI,CAAC,cAAX;AACD;AACF;AACF;;AAED,WAAO,IAAP;AACD,GA3BD;;AA8BA,EAAA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,IAAd,EAAiC;AAC/B,QAAI;AACF,aAAO,KAAK,UAAL,CAAgB,IAAhB,CAAP;AACD,KAFD,CAEE,OAAO,GAAP,EAAY;AACZ,UAAI,QAAA,CAAA,MAAA,CAAO,qCAAX,EAAkD;AAChD,QAAA,IAAI,CAAC,eAAL,GAAuB,IAAvB;AACA,QAAA,IAAI,CAAC,cAAL,GAAsB,GAAtB;AACD;;AACD,UAAI,gBAAA,CAAA,cAAA,CAAe,IAAf,CAAJ,EAA0B;AACxB,QAAA,IAAI,CAAC,KAAL,CAAW,GAAX;AACD,OAFD,MAEO;AACL,QAAA,OAAO,CAAC,IAAR,CAAa,GAAb;AACD;AACF;AACF,GAdD;;AAuBA,EAAA,UAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAkC,WAAlC,EAAsE;AAAtE,QAAA,KAAA,GAAA,IAAA;;AACE,IAAA,WAAW,GAAG,cAAc,CAAC,WAAD,CAA5B;AAEA,WAAO,IAAI,WAAJ,CAAsB,UAAC,OAAD,EAAU,MAAV,EAAgB;AAG3C,UAAI,YAAJ;AACA,MAAA,YAAY,GAAG,KAAI,CAAC,SAAL,CAAe,UAAC,KAAD,EAAM;AAClC,YAAI;AACF,UAAA,IAAI,CAAC,KAAD,CAAJ;AACD,SAFD,CAEE,OAAO,GAAP,EAAY;AACZ,UAAA,MAAM,CAAC,GAAD,CAAN;;AACA,cAAI,YAAJ,EAAkB;AAChB,YAAA,YAAY,CAAC,WAAb;AACD;AACF;AACF,OATc,EASZ,MATY,EASJ,OATI,CAAf;AAUD,KAdM,CAAP;AAeD,GAlBD;;AAqBA,EAAA,UAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,UAAX,EAAsC;AAC5B,QAAA,MAAA,GAAA,KAAA,MAAA;AACR,WAAO,MAAM,IAAI,MAAM,CAAC,SAAP,CAAiB,UAAjB,CAAjB;AACD,GAHD;;AAuBA,EAAA,UAAA,CAAA,SAAA,CAAC,YAAA,CAAA,UAAD,IAAA,YAAA;AACE,WAAO,IAAP;AACD,GAFD;;AAsCA,EAAA,UAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AAAK,QAAA,UAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAA2C;AAA3C,MAAA,UAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACH,QAAI,UAAU,CAAC,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,aAAO,IAAP;AACD;;AAED,WAAO,MAAA,CAAA,aAAA,CAAc,UAAd,EAA0B,IAA1B,CAAP;AACD,GAND;;AAcA,EAAA,UAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,WAAV,EAA8C;AAA9C,QAAA,KAAA,GAAA,IAAA;;AACE,IAAA,WAAW,GAAG,cAAc,CAAC,WAAD,CAA5B;AAEA,WAAO,IAAI,WAAJ,CAAgB,UAAC,OAAD,EAAU,MAAV,EAAgB;AACrC,UAAI,KAAJ;;AACA,MAAA,KAAI,CAAC,SAAL,CAAe,UAAC,CAAD,EAAK;AAAK,eAAA,KAAK,GAAL,CAAA;AAAS,OAAlC,EAAoC,UAAC,GAAD,EAAS;AAAK,eAAA,MAAM,CAAN,GAAM,CAAN;AAAW,OAA7D,EAA+D,YAAA;AAAM,eAAA,OAAO,CAAP,KAAO,CAAP;AAAc,OAAnF;AACD,KAHM,CAAP;AAID,GAPD;;AA5SO,EAAA,UAAA,CAAA,MAAA,GAAmB,UAAI,SAAJ,EAA4D;AACpF,WAAO,IAAI,UAAJ,CAAkB,SAAlB,CAAP;AACD,GAFM;;AAoTT,SAAA,UAAA;AAAC,CAxVD,EAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA;;AAiWb,SAAS,cAAT,CAAwB,WAAxB,EAAuE;AACrE,MAAI,CAAC,WAAL,EAAkB;AAChB,IAAA,WAAW,GAAG,QAAA,CAAA,MAAA,CAAO,OAAP,IAAkB,OAAhC;AACD;;AAED,MAAI,CAAC,WAAL,EAAkB;AAChB,UAAM,IAAI,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,SAAO,WAAP;AACD","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar canReportError_1 = require(\"./util/canReportError\");\r\nvar toSubscriber_1 = require(\"./util/toSubscriber\");\r\nvar observable_1 = require(\"./symbol/observable\");\r\nvar pipe_1 = require(\"./util/pipe\");\r\nvar config_1 = require(\"./config\");\r\nvar Observable = (function () {\r\n    function Observable(subscribe) {\r\n        this._isScalar = false;\r\n        if (subscribe) {\r\n            this._subscribe = subscribe;\r\n        }\r\n    }\r\n    Observable.prototype.lift = function (operator) {\r\n        var observable = new Observable();\r\n        observable.source = this;\r\n        observable.operator = operator;\r\n        return observable;\r\n    };\r\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\r\n        var operator = this.operator;\r\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\r\n        if (operator) {\r\n            sink.add(operator.call(sink, this.source));\r\n        }\r\n        else {\r\n            sink.add(this.source || (config_1.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\r\n                this._subscribe(sink) :\r\n                this._trySubscribe(sink));\r\n        }\r\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\r\n            if (sink.syncErrorThrowable) {\r\n                sink.syncErrorThrowable = false;\r\n                if (sink.syncErrorThrown) {\r\n                    throw sink.syncErrorValue;\r\n                }\r\n            }\r\n        }\r\n        return sink;\r\n    };\r\n    Observable.prototype._trySubscribe = function (sink) {\r\n        try {\r\n            return this._subscribe(sink);\r\n        }\r\n        catch (err) {\r\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\r\n                sink.syncErrorThrown = true;\r\n                sink.syncErrorValue = err;\r\n            }\r\n            if (canReportError_1.canReportError(sink)) {\r\n                sink.error(err);\r\n            }\r\n            else {\r\n                console.warn(err);\r\n            }\r\n        }\r\n    };\r\n    Observable.prototype.forEach = function (next, promiseCtor) {\r\n        var _this = this;\r\n        promiseCtor = getPromiseCtor(promiseCtor);\r\n        return new promiseCtor(function (resolve, reject) {\r\n            var subscription;\r\n            subscription = _this.subscribe(function (value) {\r\n                try {\r\n                    next(value);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                    if (subscription) {\r\n                        subscription.unsubscribe();\r\n                    }\r\n                }\r\n            }, reject, resolve);\r\n        });\r\n    };\r\n    Observable.prototype._subscribe = function (subscriber) {\r\n        var source = this.source;\r\n        return source && source.subscribe(subscriber);\r\n    };\r\n    Observable.prototype[observable_1.observable] = function () {\r\n        return this;\r\n    };\r\n    Observable.prototype.pipe = function () {\r\n        var operations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            operations[_i] = arguments[_i];\r\n        }\r\n        if (operations.length === 0) {\r\n            return this;\r\n        }\r\n        return pipe_1.pipeFromArray(operations)(this);\r\n    };\r\n    Observable.prototype.toPromise = function (promiseCtor) {\r\n        var _this = this;\r\n        promiseCtor = getPromiseCtor(promiseCtor);\r\n        return new promiseCtor(function (resolve, reject) {\r\n            var value;\r\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\r\n        });\r\n    };\r\n    Observable.create = function (subscribe) {\r\n        return new Observable(subscribe);\r\n    };\r\n    return Observable;\r\n}());\r\nexports.Observable = Observable;\r\nfunction getPromiseCtor(promiseCtor) {\r\n    if (!promiseCtor) {\r\n        promiseCtor = config_1.config.Promise || Promise;\r\n    }\r\n    if (!promiseCtor) {\r\n        throw new Error('no Promise impl found');\r\n    }\r\n    return promiseCtor;\r\n}\r\n//# sourceMappingURL=Observable.js.map"]},"metadata":{},"sourceType":"script"}