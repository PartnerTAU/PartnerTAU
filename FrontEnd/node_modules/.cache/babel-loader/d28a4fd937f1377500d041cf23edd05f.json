{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkFolder\\\\PartnerTAUWeb\\\\partnertaufrontend\\\\src\\\\pages\\\\listpage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport MailOutlineRoundedIcon from '@material-ui/icons/MailOutlineRounded';\nimport IconButton from '@material-ui/core/IconButton';\nimport { grey } from '@material-ui/core/colors';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport \"../../App.css\";\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\nimport { GetAllRequests, GetMatchChatGroup, InsertChatOnMatchGroup, RemoveGroupRequest, CheckForNewMatchGroup, RemovePartnerRequest, GetMatchChatPartner, InsertChatOnMatchPartner, CheckForNewMatchPartner, RemoveCourseRequest, InsertChatOnMatchCourse, GetMatchChatCourse, CheckForNewMatchCourse } from \"../../functions/serverfunction\";\nimport { getOpenRequests } from \"../../functions/courseRequest\";\nimport Modal from \"react-modal\";\nimport Moment from \"moment\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const RequestAcceptedStyle = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      // backgroundColor: \"#f5fdfd\",\n      backgroundColor: \"#f7fcfc\",\n      minWidth: \"30%\",\n      height: \"350px\",\n      margin: \"30px auto\"\n    }\n  };\n  const LightTooltip = withStyles(theme => ({\n    tooltip: {\n      backgroundColor: '#d3f1ef',\n      color: 'black',\n      boxShadow: theme.shadows[1],\n      fontSize: 18,\n      fontFamily: 'Calibri'\n    }\n  }))(Tooltip);\n  const [requests, setRequest] = useState([]);\n  const [chatText, setChatText] = useState(\"\");\n  const [courseName, setCourseName] = useState(\"\");\n  const [typeOfRequest, setTypeOfRequest] = useState(\"\");\n  const [matchIdBySet, setMatchId] = useState(-1);\n  const [modalChat, setModalChat] = useState(false);\n  const [chats, setChats] = useState([]);\n  useEffect(async () => {\n    setRequest(prevArray => []);\n    let x = await GetAllRequests();\n\n    if (x.errormsg) {\n      swal({\n        title: \"שגיאה\",\n        text: \"יש להתחבר למערכת על מנת לצפות בבקשות שלך\",\n        icon: \"warning\",\n        dangerMode: true,\n        className: \"bodyAlert\",\n        button: {\n          text: \"סגור\",\n          className: \"button1\"\n        }\n      });\n    } else {\n      x.map((item, k) => setRequest(oldArray => [...oldArray, item])); //x.map( a =>  setRequest((oldArray) => [...oldArray, a]));\n    }\n  }, []);\n  const history = useHistory();\n\n  function Redirect(page) {\n    history.push(\"/\" + page);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\" + page\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n  function closeModal() {\n    setModalChat(false);\n    setTypeOfRequest(\"\");\n    setChats([]);\n    setCourseName(\"\");\n  }\n\n  async function RemoveRequest(id, type) {\n    let req = {\n      id: id\n    };\n\n    if (type === 'group') {\n      let rem = await RemoveGroupRequest(req);\n\n      if (rem && rem === true) {\n        let x = await GetAllRequests();\n        setRequest(prevArray => []);\n        x.map((item, k) => setRequest(oldArray => [...oldArray, item]));\n      }\n    } else if (type === 'partner') {\n      let rem = await RemovePartnerRequest(req);\n\n      if (rem && rem === true) {\n        let x = await GetAllRequests();\n        setRequest(prevArray => []);\n        x.map((item, k) => setRequest(oldArray => [...oldArray, item]));\n      }\n    } else if (type === 'course') {\n      let rem = await RemoveCourseRequest(req);\n\n      if (rem && rem === true) {\n        let x = await GetAllRequests();\n        setRequest(prevArray => []);\n        x.map((item, k) => setRequest(oldArray => [...oldArray, item]));\n      }\n    }\n  }\n\n  async function FindNewMatch(id, type) {\n    let req = {\n      id: id\n    };\n\n    if (type === 'group') {\n      let rem = await CheckForNewMatchGroup(req);\n    } else if (type === 'partner') {\n      let rem = await CheckForNewMatchPartner(req);\n    } else if (type === 'course') {\n      let rem = await CheckForNewMatchCourse(req);\n    }\n\n    let x = await GetAllRequests();\n    setRequest(prevArray => []);\n    x.map((item, k) => setRequest(oldArray => [...oldArray, item]));\n  }\n\n  async function GetChats(matchId, type, coursename) {\n    setChats(prevArray => []);\n    setCourseName(coursename);\n\n    if (matchId && matchId > 0) {\n      if (type === 'group') {\n        setTypeOfRequest('group');\n        setMatchId(matchId);\n        let x = await GetMatchChatGroup(matchId);\n        x.map((item, k) => setChats(oldArray => [...oldArray, item]));\n      } else if (type === 'partner') {\n        setTypeOfRequest('partner');\n        setMatchId(matchId);\n        let x = await GetMatchChatPartner(matchId);\n        x.map((item, k) => setChats(oldArray => [...oldArray, item]));\n      } else if (type === 'course') {\n        setTypeOfRequest('course');\n        setMatchId(matchId);\n        let x = await GetMatchChatCourse(matchId);\n        x.map((item, k) => setChats(oldArray => [...oldArray, item]));\n      }\n\n      setModalChat(true);\n    }\n  }\n\n  async function AddMessage() {\n    if (chatText.length > 0) {\n      let req = {\n        matchId: matchIdBySet,\n        message: chatText,\n        coursename: courseName\n      };\n\n      if (matchIdBySet && matchIdBySet > 0) {\n        if (typeOfRequest === 'group') {\n          let x = await InsertChatOnMatchGroup(req);\n          setChatText(\"\");\n          await GetChats(matchIdBySet, typeOfRequest, courseName);\n        } else if (typeOfRequest === 'partner') {\n          let x = await InsertChatOnMatchPartner(req);\n          setChatText(\"\");\n          await GetChats(matchIdBySet, typeOfRequest, courseName);\n        } else if (typeOfRequest === 'course') {\n          let x = await InsertChatOnMatchCourse(req);\n          setChatText(\"\");\n          await GetChats(matchIdBySet, typeOfRequest, courseName);\n        }\n      }\n    }\n  }\n\n  const useStyles = makeStyles(theme => ({\n    Chat_able: {\n      color: '#30918c',\n      fontSize: 30,\n      marginRight: 5,\n      marginLeft: 5,\n      [theme.breakpoints.down(1001)]: {\n        fontSize: 25\n      },\n      [theme.breakpoints.down(741)]: {\n        fontSize: 20\n      },\n      [theme.breakpoints.down(601)]: {\n        fontSize: 15\n      },\n      [theme.breakpoints.down(451)]: {\n        fontSize: 12\n      }\n    },\n    Chat_Disable: {\n      color: grey[150],\n      fontSize: 30,\n      marginRight: 5,\n      marginLeft: 5,\n      [theme.breakpoints.down(1001)]: {\n        fontSize: 25\n      },\n      [theme.breakpoints.down(741)]: {\n        fontSize: 20\n      },\n      [theme.breakpoints.down(601)]: {\n        fontSize: 15\n      },\n      [theme.breakpoints.down(451)]: {\n        fontSize: 12\n      }\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"websiteTitle\",\n      style: {\n        marginBottom: \"30px\"\n      },\n      children: \"\\u05D4\\u05D1\\u05E7\\u05E9\\u05D5\\u05EA \\u05E9\\u05DC\\u05D9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05D4\\u05E1\\u05E8\\u05EA \\u05D1\\u05E7\\u05E9\\u05D4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E6'\\u05D0\\u05D8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E1\\u05D8\\u05D8\\u05D5\\u05E1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E1\\u05D5\\u05D2 \\u05D1\\u05E7\\u05E9\\u05D4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E9\\u05DD \\u05E7\\u05D5\\u05E8\\u05E1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05E7\\u05D5\\u05E8\\u05E1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: requests.map((item, k) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => RemoveRequest(item.id, item.type),\n              className: \"buttonclose button1\",\n              children: \"\\u05D4\\u05E1\\u05E8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), item.status === 'ממתין לפעולתך' ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => FindNewMatch(item.id, item.type),\n              className: \"buttonclose button1\",\n              children: \"\\u05D4\\u05EA\\u05D0\\u05DE\\u05D4 \\u05D7\\u05D3\\u05E9\\u05D4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 52\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.matchId && item.matchId != \"\" ? /*#__PURE__*/_jsxDEV(LightTooltip, {\n              title: \"\\u05E4\\u05EA\\u05D7 \\u05E6\\u05D0\\u05D8\",\n              placement: \"bottom\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => GetChats(item.matchId, item.type, item.courseName),\n                children: /*#__PURE__*/_jsxDEV(ChatIcon, {\n                  className: classes.Chat_able\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this) // <IconButton onClick={signOut}>\n            //   <PowerSettingsNewIcon\n            //     style={{color: grey[50], fontSize: 45, marginRight: 5, marginLeft:5}}>\n            //   </PowerSettingsNewIcon>\n            // </IconButton>\n            // <button onClick={signOut} className=\"button button1\">\n            //   התנתק\n            // </button>\n            :\n            /*#__PURE__*/\n            _jsxDEV(IconButton, {\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(ChatIcon, {\n                className: classes.Chat_Disable\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.requestType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.semester\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.courseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.courseNum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalChat,\n      onRequestClose: closeModal,\n      style: RequestAcceptedStyle,\n      contentLabel: \"Example Modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            className: \"buttonclose button1\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: chats && chats.map((item, k) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.isMe ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chatmassage1\",\n                children: item.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"catedate\",\n                children: Moment(item.creationDate).format(\"d MMM HH:mm:ss\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"left\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chatmassage2\",\n                children: item.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"catedate\",\n                children: Moment(item.creationDate).format(\"d MMM HH:mm:ss\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"30px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"18px\",\n              width: \"75%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"...\\u05D4\\u05E7\\u05DC\\u05D3 \\u05D4\\u05D5\\u05D3\\u05E2\\u05D4\",\n              rows: \"3\",\n              value: chatText,\n              onChange: e => {\n                setChatText(e.target.value);\n              },\n              style: {\n                width: \"100%\"\n              },\n              class: \"inputclass\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: AddMessage,\n            className: \"buttonclose button1\",\n            children: \"\\u05E9\\u05DC\\u05D7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            GetChats(matchIdBySet, typeOfRequest, courseName);\n          },\n          style: {\n            position: 'absolute',\n            right: '5px',\n            bottom: '3px',\n            fontSize: \"10px\",\n            color: \"gray\"\n          },\n          children: \"\\u05E8\\u05E2\\u05E0\\u05DF \\u05E6'\\u05D0\\u05D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"1n/Ym3Fy7AFxKi1pKs/QEB7xNNU=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/WorkFolder/PartnerTAUWeb/partnertaufrontend/src/pages/listpage/index.js"],"names":["React","useEffect","useState","Tooltip","withStyles","makeStyles","MailOutlineRoundedIcon","IconButton","grey","ChatIcon","Route","Redirect","useHistory","GetAllRequests","GetMatchChatGroup","InsertChatOnMatchGroup","RemoveGroupRequest","CheckForNewMatchGroup","RemovePartnerRequest","GetMatchChatPartner","InsertChatOnMatchPartner","CheckForNewMatchPartner","RemoveCourseRequest","InsertChatOnMatchCourse","GetMatchChatCourse","CheckForNewMatchCourse","getOpenRequests","Modal","Moment","swal","List","RequestAcceptedStyle","content","top","left","right","bottom","marginRight","transform","backgroundColor","minWidth","height","margin","LightTooltip","theme","tooltip","color","boxShadow","shadows","fontSize","fontFamily","requests","setRequest","chatText","setChatText","courseName","setCourseName","typeOfRequest","setTypeOfRequest","matchIdBySet","setMatchId","modalChat","setModalChat","chats","setChats","prevArray","x","errormsg","title","text","icon","dangerMode","className","button","map","item","k","oldArray","history","page","push","pathname","closeModal","RemoveRequest","id","type","req","rem","FindNewMatch","GetChats","matchId","coursename","AddMessage","length","message","useStyles","Chat_able","marginLeft","breakpoints","down","Chat_Disable","classes","marginBottom","status","requestType","semester","courseNum","position","isMe","textAlign","creationDate","format","marginTop","display","flexDirection","alignItems","justifyContent","width","e","target","value"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport MailOutlineRoundedIcon from '@material-ui/icons/MailOutlineRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\nimport \"../../App.css\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport {\r\n  GetAllRequests,\r\n  GetMatchChatGroup,\r\n  InsertChatOnMatchGroup,\r\n  RemoveGroupRequest,\r\n  CheckForNewMatchGroup,\r\n  RemovePartnerRequest,\r\n  GetMatchChatPartner,\r\n  InsertChatOnMatchPartner,\r\n  CheckForNewMatchPartner,\r\n  RemoveCourseRequest,\r\n  InsertChatOnMatchCourse,\r\n  GetMatchChatCourse,\r\n  CheckForNewMatchCourse\r\n} from \"../../functions/serverfunction\";\r\nimport { getOpenRequests } from \"../../functions/courseRequest\";\r\nimport Modal from \"react-modal\";\r\nimport Moment from \"moment\";\r\n\r\nimport swal from \"sweetalert\";\r\n\r\nfunction List() {\r\n  const RequestAcceptedStyle = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      // backgroundColor: \"#f5fdfd\",\r\n      backgroundColor: \"#f7fcfc\",\r\n      minWidth: \"30%\",\r\n      height: \"350px\",\r\n      margin: \"30px auto\",\r\n    },\r\n  };\r\n\r\n  const LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n      backgroundColor: '#d3f1ef',\r\n      color: 'black',\r\n      boxShadow: theme.shadows[1],\r\n      fontSize: 18,\r\n      fontFamily: 'Calibri'\r\n    },\r\n  }))(Tooltip);\r\n\r\n\r\n  const [requests, setRequest] = useState([]);\r\n  const [chatText, setChatText] = useState(\"\");\r\n  const [courseName, setCourseName] = useState(\"\");\r\n  const [typeOfRequest, setTypeOfRequest] = useState(\"\");\r\n  const [matchIdBySet, setMatchId] = useState(-1);\r\n  const [modalChat, setModalChat] = useState(false);\r\n  const [chats, setChats] = useState([]);\r\n  useEffect(async () => {\r\n    setRequest((prevArray) => []);\r\n    let x = await GetAllRequests();\r\n    if (x.errormsg) {\r\n      swal({\r\n        title: \"שגיאה\",\r\n        text: \"יש להתחבר למערכת על מנת לצפות בבקשות שלך\",\r\n        icon: \"warning\",\r\n        dangerMode: true,\r\n        className: \"bodyAlert\",\r\n        button: {\r\n          text: \"סגור\",\r\n          className: \"button1\",\r\n        },\r\n      });\r\n    } else {\r\n      x.map((item, k) => setRequest((oldArray) => [...oldArray, item]));\r\n\r\n      //x.map( a =>  setRequest((oldArray) => [...oldArray, a]));\r\n    }\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  function Redirect(page) {\r\n    history.push(\"/\" + page);\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/\" + page,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  function closeModal() {\r\n    setModalChat(false);\r\n    setTypeOfRequest(\"\")\r\n    setChats([]);\r\n    setCourseName(\"\")\r\n  }\r\n\r\n  async function RemoveRequest(id,type){\r\n\r\n    let req = {\r\n      id : id\r\n    }\r\n    if(type === 'group')\r\n    {\r\n      \r\n        let rem = await RemoveGroupRequest(req)\r\n        if(rem && rem === true)\r\n        {\r\n          let x = await GetAllRequests();\r\n          setRequest((prevArray) => []);\r\n          x.map((item, k) => setRequest((oldArray) => [...oldArray, item]));\r\n        }\r\n\r\n    }\r\n    else if(type === 'partner')\r\n    {\r\n      let rem = await RemovePartnerRequest(req)\r\n        if(rem && rem === true)\r\n        {\r\n          let x = await GetAllRequests();\r\n          setRequest((prevArray) => []);\r\n          x.map((item, k) => setRequest((oldArray) => [...oldArray, item]));\r\n        }\r\n    }\r\n    else if(type === 'course')\r\n    {\r\n      let rem = await RemoveCourseRequest(req)\r\n        if(rem && rem === true)\r\n        {\r\n          let x = await GetAllRequests();\r\n          setRequest((prevArray) => []);\r\n          x.map((item, k) => setRequest((oldArray) => [...oldArray, item]));\r\n        }\r\n    }\r\n  }\r\n\r\n  async function FindNewMatch(id,type){\r\n\r\n    let req = {\r\n      id : id\r\n    }\r\n    if(type === 'group')\r\n    {\r\n      \r\n        let rem = await CheckForNewMatchGroup(req)\r\n       \r\n\r\n    }\r\n    else if(type === 'partner')\r\n    {\r\n      \r\n        let rem = await CheckForNewMatchPartner(req)\r\n       \r\n\r\n    }\r\n    else if(type === 'course')\r\n    {\r\n      \r\n        let rem = await CheckForNewMatchCourse(req)\r\n       \r\n\r\n    }\r\n\r\n\r\n    let x = await GetAllRequests();\r\n    setRequest((prevArray) => []);\r\n    x.map((item, k) => setRequest((oldArray) => [...oldArray, item]));\r\n\r\n  }\r\n\r\n  async function GetChats(matchId,type,coursename) {\r\n    setChats((prevArray) => []);\r\n    setCourseName(coursename)\r\n    if (matchId && matchId > 0) {\r\n      if(type === 'group')\r\n      {\r\n        setTypeOfRequest('group')\r\n        setMatchId(matchId)\r\n        let x = await GetMatchChatGroup(matchId);\r\n        x.map((item, k) => setChats((oldArray) => [...oldArray, item]));\r\n      }\r\n      else if(type === 'partner')\r\n      {\r\n        setTypeOfRequest('partner')\r\n        setMatchId(matchId)\r\n        let x = await GetMatchChatPartner(matchId);\r\n        x.map((item, k) => setChats((oldArray) => [...oldArray, item]));\r\n      }\r\n      else if(type === 'course')\r\n      {\r\n        setTypeOfRequest('course')\r\n        setMatchId(matchId)\r\n        let x = await GetMatchChatCourse(matchId);\r\n        x.map((item, k) => setChats((oldArray) => [...oldArray, item]));\r\n      }\r\n      setModalChat(true);\r\n    }\r\n  }\r\n\r\n  async function AddMessage() {\r\n\r\n    if(chatText.length > 0)\r\n    {\r\n\r\n      let req = {\r\n        matchId : matchIdBySet,\r\n        message : chatText,\r\n        coursename : courseName\r\n      }\r\n      if (matchIdBySet && matchIdBySet > 0) {\r\n  \r\n        if(typeOfRequest === 'group')\r\n        {\r\n          let x = await InsertChatOnMatchGroup(req);\r\n          setChatText(\"\")\r\n          await GetChats(matchIdBySet,typeOfRequest,courseName)\r\n        }\r\n        else if(typeOfRequest === 'partner')\r\n        {\r\n          let x = await InsertChatOnMatchPartner(req);\r\n          setChatText(\"\")\r\n          await GetChats(matchIdBySet,typeOfRequest,courseName)\r\n        }\r\n        else if(typeOfRequest === 'course')\r\n        {\r\n          let x = await InsertChatOnMatchCourse(req);\r\n          setChatText(\"\")\r\n          await GetChats(matchIdBySet,typeOfRequest,courseName)\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    Chat_able:{\r\n      color:'#30918c', \r\n      fontSize: 30, \r\n      marginRight: 5,\r\n      marginLeft:5,\r\n      [theme.breakpoints.down(1001)]:{\r\n        fontSize: 25,\r\n      },\r\n      [theme.breakpoints.down(741)]:{\r\n        fontSize: 20,\r\n      },\r\n      [theme.breakpoints.down(601)]:{\r\n        fontSize: 15,\r\n      },\r\n      [theme.breakpoints.down(451)]:{\r\n        fontSize: 12,\r\n      },\r\n    },\r\n    Chat_Disable:{\r\n      color: grey[150],\r\n      fontSize: 30,\r\n      marginRight: 5, \r\n      marginLeft:5,\r\n      [theme.breakpoints.down(1001)]:{\r\n        fontSize: 25,\r\n      },\r\n      [theme.breakpoints.down(741)]:{\r\n        fontSize: 20,\r\n      },\r\n      [theme.breakpoints.down(601)]:{\r\n        fontSize: 15,\r\n      },\r\n      [theme.breakpoints.down(451)]:{\r\n        fontSize: 12,\r\n      },\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"websiteTitle\" style={{marginBottom: \"30px\" }}>\r\n        הבקשות שלי\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>הסרת בקשה</th>\r\n            <th>צ'אט</th>\r\n            <th>סטטוס</th>\r\n            <th>סוג בקשה</th>\r\n            <th>סמסטר</th>\r\n            <th>שם קורס</th>\r\n            <th>מספר קורס</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {requests.map((item, k) => (\r\n            <tr>\r\n              <td>\r\n                <button onClick={() => RemoveRequest(item.id,item.type)} className=\"buttonclose button1\">הסר</button>\r\n                {item.status === 'ממתין לפעולתך' ? <button onClick={() => FindNewMatch(item.id,item.type)} className=\"buttonclose button1\">התאמה חדשה</button> : \"\"}\r\n              </td>\r\n              {/* <td onClick={() => GetChats(item.matchId,item.type,item.courseName)}>צ'אט</td> */}\r\n              <td>\r\n                {item.matchId && item.matchId != \"\" ? (\r\n                <LightTooltip title=\"פתח צאט\" placement=\"bottom\">\r\n                <IconButton onClick={() => GetChats(item.matchId,item.type,item.courseName)}>\r\n                  <ChatIcon className={classes.Chat_able}>\r\n                  </ChatIcon>\r\n                </IconButton>\r\n                </LightTooltip>\r\n                // <IconButton onClick={signOut}>\r\n                //   <PowerSettingsNewIcon\r\n                //     style={{color: grey[50], fontSize: 45, marginRight: 5, marginLeft:5}}>\r\n                //   </PowerSettingsNewIcon>\r\n                // </IconButton>\r\n                  // <button onClick={signOut} className=\"button button1\">\r\n                  //   התנתק\r\n                  // </button>\r\n                ) : (\r\n                  <IconButton disabled>\r\n                    <ChatIcon className={classes.Chat_Disable}>\r\n                    </ChatIcon>\r\n                  </IconButton>\r\n                )}\r\n              </td>\r\n              <td>{item.status}</td>\r\n              <td>{item.requestType}</td>\r\n              <td>{item.semester}</td>\r\n              <td>{item.courseName}</td>\r\n              <td>{item.courseNum}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <Modal\r\n        isOpen={modalChat}\r\n        onRequestClose={closeModal}\r\n        style={RequestAcceptedStyle}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        \r\n        <div style={{position:'relative'}} >\r\n        <div>\r\n         <button onClick={closeModal} className=\"buttonclose button1\">X</button> \r\n        </div>\r\n        <div>\r\n          {chats &&\r\n            chats.map((item, k) => (\r\n              <div>\r\n                {item.isMe ? (\r\n                  <div style={{ textAlign: \"right\"}}>\r\n                    <div  className=\"chatmassage1\">{item.message}</div>\r\n                    <div className=\"catedate\">\r\n                      {Moment(item.creationDate).format(\"d MMM HH:mm:ss\")}\r\n                    </div>\r\n                    {/* <div style={{ fontSize: \"10px\", color: \"gray\" }}>אני</div> */}\r\n                  </div>\r\n                ) : (\r\n                  <div style={{ textAlign: \"left\"}}>\r\n                    <div className=\"chatmassage2\">{item.message}</div>\r\n                    <div className=\"catedate\">\r\n                      {Moment(item.creationDate).format(\"d MMM HH:mm:ss\")}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n\r\n\r\n\r\n          <div\r\n            style={{\r\n              marginTop: \"30px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <div style={{ fontSize: \"18px\", width:\"75%\" }}>\r\n              <textarea placeholder=\"...הקלד הודעה\"  rows=\"3\"\r\n               value = {chatText}\r\n                onChange={(e) => {\r\n                  setChatText(e.target.value);\r\n                }}\r\n                style={{ width: \"100%\" }}\r\n                class=\"inputclass\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={AddMessage} className=\"buttonclose button1\">שלח</button>\r\n          </div>\r\n          <div onClick={() => {GetChats(matchIdBySet,typeOfRequest,courseName)}} style={{position:'absolute', right:'5px', bottom: '3px', fontSize: \"10px\", color: \"gray\"}}>רענן צ'אט</div>\r\n        </div>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}