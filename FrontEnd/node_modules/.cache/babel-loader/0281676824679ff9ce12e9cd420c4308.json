{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\nexport const CreatePartnerRequest = async (grpcount, reqgrpcount, course, semester) => {\n  let data = {\n    grpcount: Number(grpcount),\n    reqgrpcount: Number(reqgrpcount),\n    course: Number(course),\n    semester: semester\n  };\n\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(\"http://localhost:3001/PartnerRequest\", data).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c = CreatePartnerRequest;\nexport const CreateCourseRequest = async (reqcourseid, course, semester) => {\n  let data = {\n    reqcourseid: Number(reqcourseid),\n    course: Number(course),\n    semester: semester\n  };\n\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(\"http://localhost:3001/CourseRequest\", data).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c2 = CreateCourseRequest;\nexport const CreateGroupRequest = async (grp, reqgrp, course, semester) => {\n  let data = {\n    grp: grp,\n    reqgrp: reqgrp,\n    course: Number(course),\n    semester: semester\n  };\n\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(\"http://localhost:3001/GroupRequest\", data).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c3 = CreateGroupRequest;\nexport const GetCourseAutoComplete = async text => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.get(\"http://localhost:3001/GetCourseAutoComplete\", {\n      params: {\n        text: text\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c4 = GetCourseAutoComplete;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CreatePartnerRequest\");\n$RefreshReg$(_c2, \"CreateCourseRequest\");\n$RefreshReg$(_c3, \"CreateGroupRequest\");\n$RefreshReg$(_c4, \"GetCourseAutoComplete\");","map":{"version":3,"sources":["C:/Users/cohav/Desktop/PartnerTAU-1/FrontEnd/src/functions/serverfunction.js"],"names":["axios","defaults","headers","common","localStorage","getItem","CreatePartnerRequest","grpcount","reqgrpcount","course","semester","data","Number","post","then","response","catch","error","errormsg","CreateCourseRequest","reqcourseid","CreateGroupRequest","grp","reqgrp","GetCourseAutoComplete","text","get","params"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] =\r\n  \"Bearer \" +\r\n  (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\n\r\nexport const CreatePartnerRequest = async (\r\n  grpcount,\r\n  reqgrpcount,\r\n  course,\r\n  semester\r\n) => {\r\n  let data = {\r\n    grpcount: Number(grpcount),\r\n    reqgrpcount: Number(reqgrpcount),\r\n    course: Number(course),\r\n    semester: semester,\r\n  };\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(\"http://localhost:3001/PartnerRequest\", data)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const CreateCourseRequest = async (reqcourseid, course, semester) => {\r\n  let data = {\r\n    reqcourseid: Number(reqcourseid),\r\n    course: Number(course),\r\n    semester: semester,\r\n  };\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(\"http://localhost:3001/CourseRequest\", data)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const CreateGroupRequest = async (grp, reqgrp, course, semester) => {\r\n  let data = {\r\n    grp: grp,\r\n    reqgrp: reqgrp,\r\n    course: Number(course),\r\n    semester: semester,\r\n  };\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(\"http://localhost:3001/GroupRequest\", data)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const GetCourseAutoComplete = async (text) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .get(\"http://localhost:3001/GetCourseAutoComplete\", {\r\n        params: {\r\n          text: text,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}