{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tsach Arrad\\\\Desktop\\\\my-app\\\\my-app\\\\src\\\\pages\\\\formOne\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component, useEffect, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormOne() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n  const password = useRef({});\n  password.current = watch(\"Password\", \"\");\n\n  const onSubmitLogin = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmitLogin),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"Username\",\n          ...register(\"Username\", {\n            required: true\n          }),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"Password\",\n          ...register(\"Password\", {\n            required: true\n          }),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"RepeatPassword\",\n          ...register(\"RepeatPassword\", {\n            required: true\n          }),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: \"0\",\n            color: \"white\"\n          },\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors && errors.password && errors.Password && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: errors.Password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormOne, \"jaHxnYFHL3SEe3hO/tAT//aylM0=\", false, function () {\n  return [useForm];\n});\n\n_c = FormOne;\n;\nexport default FormOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormOne\");","map":{"version":3,"sources":["C:/Users/Tsach Arrad/Desktop/my-app/my-app/src/pages/formOne/index.js"],"names":["React","useState","Component","useEffect","useRef","useForm","FormOne","register","handleSubmit","errors","watch","password","current","onSubmitLogin","data","console","log","display","flexDirection","alignItems","justifyContent","required","padding","color","Password","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,OAA9D;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AACA,SAASC,OAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAA4CL,OAAO,EAAzD;AACA,QAAMM,QAAQ,GAAGP,MAAM,CAAC,EAAD,CAAvB;AACAO,EAAAA,QAAQ,CAACC,OAAT,GAAmBF,KAAK,CAAC,UAAD,EAAa,EAAb,CAAxB;;AACA,QAAMG,aAAa,GAAIC,IAAD,IAAU;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,aAAa,EAAE,QAFV;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,cAAc,EAAE;AAJX,KADT;AAAA,2BAQE;AAAM,MAAA,QAAQ,EAAEZ,YAAY,CAACK,aAAD,CAA5B;AAAA,8BACE;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,UADP;AAAA,aAEMN,QAAQ,CAAC,UAAD,EAAY;AAAEc,YAAAA,QAAQ,EAAE;AAAZ,WAAZ,CAFd;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,UADP;AAAA,aAEMd,QAAQ,CAAC,UAAD,EAAY;AAAEc,YAAAA,QAAQ,EAAE;AAAZ,WAAZ,CAFd;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,gBADP;AAAA,aAEMd,QAAQ,CAAC,gBAAD,EAAkB;AAAEc,YAAAA,QAAQ,EAAE;AAAZ,WAAlB,CAFd;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF,eAuBE;AAAA,+BAEA;AACQ,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE,GAAX;AAAgBC,YAAAA,KAAK,EAAE;AAAvB,WADf;AAEQ,UAAA,IAAI,EAAC,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cAvBF,eAkCE;AAAA,kBAECd,MAAM,IAAGA,MAAM,CAACE,QAAhB,IAA4BF,MAAM,CAACe,QAAnC,iBACO;AAAK,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAT,WAAZ;AAAA,oBAA+Bd,MAAM,CAACe,QAAP,CAAgBC;AAA/C;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD;;GA5DQnB,O;UAC2CD,O;;;KAD3CC,O;AA4DR;AAED,eAAeA,OAAf","sourcesContent":["import React, { useState, Component, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction FormOne () {\r\n  const { register, handleSubmit, errors, watch } = useForm();\r\n  const password = useRef({});\r\n  password.current = watch(\"Password\", \"\");\r\n  const onSubmitLogin = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <form onSubmit={handleSubmit(onSubmitLogin)}>\r\n        <div>\r\n          <input\r\n            name=\"Username\"\r\n            {...register(\"Username\",{ required: true })}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            name=\"Password\"\r\n            {...register(\"Password\",{ required: true })}\r\n            type=\"password\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            name=\"RepeatPassword\"\r\n            {...register(\"RepeatPassword\",{ required: true })}\r\n            type=\"password\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n\r\n        <button\r\n                style={{ padding: \"0\", color: \"white\" }}\r\n                type=\"submit\"\r\n              >\r\n                Sign Up\r\n              </button>\r\n\r\n        </div>\r\n\r\n        <div>\r\n\r\n        {errors&& errors.password && errors.Password && (\r\n                <div style={{ color: \"red\" }}>{errors.Password.message}</div>\r\n              )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormOne;\r\n"]},"metadata":{},"sourceType":"module"}