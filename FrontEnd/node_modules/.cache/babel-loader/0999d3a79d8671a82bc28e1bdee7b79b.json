{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tsach Arrad\\\\Desktop\\\\my-app\\\\my-app\\\\src\\\\pages\\\\navbar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"../../images/logo.png\";\nimport { React, useEffect, useState } from \"react\";\nimport \"../../App.css\";\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\nimport Login from \"../loginpage\";\nimport { loginConfirmed } from \"../../utils/subjects/loginSubject/loginSubject\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"#d3f1ef\"\n  }\n};\n\nfunction NavBar() {\n  _s();\n\n  useEffect(() => {\n    const subscriptionCC = loginConfirmed.onSubjectTrigged().subscribe(() => {\n      setIsOpen(false);\n      setUsername(localStorage.getItem(\"user\"));\n    });\n  }, []);\n  const history = useHistory();\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [buttonString, setButtonString] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function Redirect(page) {\n    history.push(\"/\" + page);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\" + page\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  function signOut() {\n    if (localStorage.getItem(\"user\")) {\n      //Connected\n      localStorage.removeItem(\"user\");\n      setUsername(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavBar, \"nITKAG8Hj/nsdnafGbtBB57H9TY=\", false, function () {\n  return [useHistory];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["C:/Users/Tsach Arrad/Desktop/my-app/my-app/src/pages/navbar/index.js"],"names":["logo","React","useEffect","useState","Route","Redirect","useHistory","Login","loginConfirmed","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","NavBar","subscriptionCC","onSubjectTrigged","subscribe","setIsOpen","setUsername","localStorage","getItem","history","modalIsOpen","buttonString","setButtonString","username","openModal","closeModal","page","push","pathname","signOut","removeItem"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,cAAT,QAA+B,gDAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,KADE;AAEPC,IAAAA,IAAI,EAAE,KAFC;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,MAAM,EAAE,MAJD;AAKPC,IAAAA,WAAW,EAAE,MALN;AAMPC,IAAAA,SAAS,EAAE,uBANJ;AAOPC,IAAAA,eAAe,EAAE;AAPV;AADU,CAArB;;AAYA,SAASC,MAAT,GAAkB;AAAA;;AAChBjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,cAAc,GAAGZ,cAAc,CAClCa,gBADoB,GAGpBC,SAHoB,CAGV,MAAM;AACfC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAC,MAAAA,WAAW,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAAX;AACD,KANoB,CAAvB;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,QAAMC,OAAO,GAAGrB,UAAU,EAA1B;AACA,QAAM,CAACsB,WAAD,EAAcL,SAAd,IAA2BpB,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC4B,QAAD,EAAWP,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAAS6B,SAAT,GAAqB;AACnBT,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASU,UAAT,GAAsB;AACpBV,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AAED,WAASlB,QAAT,CAAkB6B,IAAlB,EAAwB;AACtBP,IAAAA,OAAO,CAACQ,IAAR,CAAa,MAAMD,IAAnB;AACA,wBACE,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFE,QAAAA,QAAQ,EAAE,MAAMF;AADd;AADN;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,WAASG,OAAT,GAAmB;AACjB,QAAIZ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChC;AACAD,MAAAA,YAAY,CAACa,UAAb,CAAwB,MAAxB;AACAd,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjDQL,M;UAWSb,U;;;KAXTa,M;AAmDT,eAAeA,MAAf","sourcesContent":["import logo from \"../../images/logo.png\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport \"../../App.css\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport Login from \"../loginpage\";\r\nimport { loginConfirmed } from \"../../utils/subjects/loginSubject/loginSubject\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    backgroundColor: \"#d3f1ef\",\r\n  },\r\n};\r\n\r\nfunction NavBar() {\r\n  useEffect(() => {\r\n    const subscriptionCC = loginConfirmed\r\n      .onSubjectTrigged()\r\n\r\n      .subscribe(() => {\r\n        setIsOpen(false);\r\n        setUsername(localStorage.getItem(\"user\"));\r\n      });\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [buttonString, setButtonString] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function Redirect(page) {\r\n    history.push(\"/\" + page);\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/\" + page,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  function signOut() {\r\n    if (localStorage.getItem(\"user\")) {\r\n      //Connected\r\n      localStorage.removeItem(\"user\");\r\n      setUsername(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}