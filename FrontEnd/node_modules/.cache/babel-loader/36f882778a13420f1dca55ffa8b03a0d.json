{"ast":null,"code":"import axios from \"axios\"; //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\n\nlet path = 'https://partnertaubackend.herokuapp.com/'; // let path = 'http://localhost:3001/'\n\nexport const CreateGroupRequest = async (grp, reqgrp, coursenumber, coursename, semester) => {\n  let data = {\n    grp: grp,\n    reqgrp: reqgrp,\n    coursenumber: coursenumber,\n    coursename: coursename,\n    semester: semester\n  };\n\n  if (localStorage.getItem(\"token\")) {\n    if (grp == \"\" || reqgrp == \"\") {\n      return 0;\n    } //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\n\n\n    return axios.post(path + \"GroupRequest\", data).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c = CreateGroupRequest;\nexport const GetCourseAutoComplete = async text => {\n  //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\n  return axios.get(path + \"GetCourseAutoComplete\", {\n    params: {\n      text: text\n    }\n  }).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    return error;\n  });\n};\n_c2 = GetCourseAutoComplete;\nexport const GetAllRequests = async () => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.get(path + \"getAllRequests\").then(function (response) {\n      console.log(response.data);\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n}; ///////////////////////////////////////Group Section////////////////////////\n\n_c3 = GetAllRequests;\nexport const GetCourseGroupByNameAndSemester = async req => {\n  return axios.post(path + \"GetCourseGroupByNameAndSemester\", req).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    return error;\n  });\n};\n_c4 = GetCourseGroupByNameAndSemester;\nexport const GetMatchChatGroup = async matchId => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.get(path + \"GetMatchChatGroup\", {\n      params: {\n        id: matchId\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c5 = GetMatchChatGroup;\nexport const InsertChatOnMatchGroup = async req => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"InsertChatOnMatchGroup\", req).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c6 = InsertChatOnMatchGroup;\nexport const RemoveGroupRequest = async req => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"RemoveGroupRequest\", req).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c7 = RemoveGroupRequest;\nexport const CheckForNewMatchGroup = async req => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"CheckForNewMatchGroup\", req).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n}; ///////////////////////////////////////Group Section////////////////////////\n\n_c8 = CheckForNewMatchGroup;\nexport const CreatePartnerRequest = async (grpcount, reqgrpcount, grpnum, coursenumber, coursename, semester) => {\n  let data = {\n    grpcount: Number(grpcount),\n    reqgrpcount: Number(reqgrpcount),\n    grpnum: grpnum == \"\" ? \"00\" : grpnum,\n    coursenumber: coursenumber,\n    coursename: coursename,\n    semester: semester\n  };\n\n  if (localStorage.getItem(\"token\")) {\n    if (grpcount == \"\" || reqgrpcount == \"\") {\n      return 0;\n    } //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\n\n\n    return axios.post(path + \"PartnerRequest\", data).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c9 = CreatePartnerRequest;\nexport const RemovePartnerRequest = async req => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"RemovePartnerRequest\", req).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c10 = RemovePartnerRequest;\nexport const CheckForNewMatchPartner = async req => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"CheckForNewMatchPartner\", req).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c11 = CheckForNewMatchPartner;\nexport const GetMatchChatPartner = async matchId => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.get(path + \"GetMatchChatPartner\", {\n      params: {\n        id: matchId\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c12 = GetMatchChatPartner;\nexport const InsertChatOnMatchPartner = async req => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"InsertChatOnMatchPartner\", req).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n}; //////////////////////////////////////////////////////////////\n\n_c13 = InsertChatOnMatchPartner;\nexport const CreateCourseRequest = async (coursenumber, coursename, semester, coursenameautocomplete, coursenumberautocomplete) => {\n  let data = {\n    offeredcoursenumber: coursenumber,\n    offeredcoursename: coursename,\n    semester: semester,\n    reqcoursenumber: coursenumberautocomplete,\n    reqcoursename: coursenameautocomplete\n  };\n\n  if (localStorage.getItem(\"token\")) {\n    if (coursenameautocomplete == \"\" && coursenumberautocomplete == \"\") {\n      return 0;\n    } //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\n\n\n    return axios.post(path + \"CourseRequest\", data).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c14 = CreateCourseRequest;\nexport const RemoveCourseRequest = async req => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"RemoveCourseRequest\", req).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c15 = RemoveCourseRequest;\nexport const GetMatchChatCourse = async matchId => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.get(path + \"GetMatchChatCourse\", {\n      params: {\n        id: matchId\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c16 = GetMatchChatCourse;\nexport const InsertChatOnMatchCourse = async req => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"InsertChatOnMatchCourse\", req).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c17 = InsertChatOnMatchCourse;\nexport const CheckForNewMatchCourse = async req => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"CheckForNewMatchCourse\", req).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c18 = CheckForNewMatchCourse;\nexport const GetWhatsapp = async (coursenumber, semester) => {\n  return axios.get(path + \"GetWhatsappLinkByCourseAndSemester\", {\n    params: {\n      coursenumber: coursenumber,\n      semester: semester\n    }\n  }).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    return error;\n  });\n};\n_c19 = GetWhatsapp;\nexport const UpdateWhatsapp = async body => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"UpdateWhatsappLinkByCourseAndSemester\", body).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c20 = UpdateWhatsapp;\nexport const InsertWhatsapp = async body => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.post(path + \"SetWhatsappLinkByCourseAndSemester\", body).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c21 = InsertWhatsapp;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n\n$RefreshReg$(_c, \"CreateGroupRequest\");\n$RefreshReg$(_c2, \"GetCourseAutoComplete\");\n$RefreshReg$(_c3, \"GetAllRequests\");\n$RefreshReg$(_c4, \"GetCourseGroupByNameAndSemester\");\n$RefreshReg$(_c5, \"GetMatchChatGroup\");\n$RefreshReg$(_c6, \"InsertChatOnMatchGroup\");\n$RefreshReg$(_c7, \"RemoveGroupRequest\");\n$RefreshReg$(_c8, \"CheckForNewMatchGroup\");\n$RefreshReg$(_c9, \"CreatePartnerRequest\");\n$RefreshReg$(_c10, \"RemovePartnerRequest\");\n$RefreshReg$(_c11, \"CheckForNewMatchPartner\");\n$RefreshReg$(_c12, \"GetMatchChatPartner\");\n$RefreshReg$(_c13, \"InsertChatOnMatchPartner\");\n$RefreshReg$(_c14, \"CreateCourseRequest\");\n$RefreshReg$(_c15, \"RemoveCourseRequest\");\n$RefreshReg$(_c16, \"GetMatchChatCourse\");\n$RefreshReg$(_c17, \"InsertChatOnMatchCourse\");\n$RefreshReg$(_c18, \"CheckForNewMatchCourse\");\n$RefreshReg$(_c19, \"GetWhatsapp\");\n$RefreshReg$(_c20, \"UpdateWhatsapp\");\n$RefreshReg$(_c21, \"InsertWhatsapp\");","map":{"version":3,"sources":["C:/WorkFolder/PartnerTAU/FrontEnd/src/functions/serverfunction.js"],"names":["axios","path","CreateGroupRequest","grp","reqgrp","coursenumber","coursename","semester","data","localStorage","getItem","post","then","response","catch","error","errormsg","GetCourseAutoComplete","text","get","params","GetAllRequests","console","log","GetCourseGroupByNameAndSemester","req","GetMatchChatGroup","matchId","id","InsertChatOnMatchGroup","RemoveGroupRequest","CheckForNewMatchGroup","CreatePartnerRequest","grpcount","reqgrpcount","grpnum","Number","RemovePartnerRequest","CheckForNewMatchPartner","GetMatchChatPartner","InsertChatOnMatchPartner","CreateCourseRequest","coursenameautocomplete","coursenumberautocomplete","offeredcoursenumber","offeredcoursename","reqcoursenumber","reqcoursename","RemoveCourseRequest","GetMatchChatCourse","InsertChatOnMatchCourse","CheckForNewMatchCourse","GetWhatsapp","UpdateWhatsapp","body","InsertWhatsapp"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\n//axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\nlet path = 'https://partnertaubackend.herokuapp.com/'\r\n// let path = 'http://localhost:3001/'\r\n        \r\n\r\nexport const CreateGroupRequest = async (\r\n  grp,\r\n  reqgrp,\r\n  coursenumber,\r\n  coursename,\r\n  semester\r\n) => {\r\n  let data = {\r\n    grp: grp,\r\n    reqgrp: reqgrp,\r\n    coursenumber: coursenumber,\r\n    coursename: coursename,\r\n    semester: semester,\r\n  };\r\n  if (localStorage.getItem(\"token\")) {\r\n    if(grp==\"\" || reqgrp==\"\"){\r\n      return 0;\r\n    }\r\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\n    return axios\r\n      .post(path+\"GroupRequest\", data)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const GetCourseAutoComplete = async (text) => {\r\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\n    return axios\r\n      .get(path+\"GetCourseAutoComplete\", {\r\n        params: {\r\n          text: text,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n};\r\n\r\nexport const GetAllRequests = async () => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .get(path+\"getAllRequests\")\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\n///////////////////////////////////////Group Section////////////////////////\r\nexport const GetCourseGroupByNameAndSemester = async (req) => {\r\n    return axios\r\n      .post(path+\"GetCourseGroupByNameAndSemester\", req)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n};\r\n\r\nexport const GetMatchChatGroup = async (matchId) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .get(path+\"GetMatchChatGroup\", {\r\n        params: {\r\n          id: matchId,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const InsertChatOnMatchGroup = async (req) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"InsertChatOnMatchGroup\", req)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const RemoveGroupRequest = async (req) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"RemoveGroupRequest\", req)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const CheckForNewMatchGroup = async (req) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"CheckForNewMatchGroup\", req)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\n///////////////////////////////////////Group Section////////////////////////\r\n\r\nexport const CreatePartnerRequest = async (\r\n  grpcount,\r\n  reqgrpcount,\r\n  grpnum,\r\n  coursenumber,\r\n  coursename,\r\n  semester\r\n) => {\r\n  let data = {\r\n    grpcount: Number(grpcount),\r\n    reqgrpcount: Number(reqgrpcount),\r\n    grpnum: grpnum == \"\" ? \"00\" : grpnum,\r\n    coursenumber: coursenumber,\r\n    coursename: coursename,\r\n    semester: semester,\r\n  };\r\n  if (localStorage.getItem(\"token\")) {\r\n    if(grpcount==\"\" || reqgrpcount==\"\"){\r\n      return 0;\r\n    }\r\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\n    return axios\r\n      .post(path+\"PartnerRequest\", data)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const RemovePartnerRequest = async (req) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"RemovePartnerRequest\", req)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const CheckForNewMatchPartner = async (req) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"CheckForNewMatchPartner\", req)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const GetMatchChatPartner = async (matchId) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .get(path+\"GetMatchChatPartner\", {\r\n        params: {\r\n          id: matchId,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const InsertChatOnMatchPartner = async (req) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"InsertChatOnMatchPartner\", req)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\n//////////////////////////////////////////////////////////////\r\n\r\nexport const CreateCourseRequest = async (\r\n  coursenumber,\r\n  coursename,\r\n  semester,\r\n  coursenameautocomplete,\r\n  coursenumberautocomplete\r\n) => {\r\n  let data = {\r\n    offeredcoursenumber: coursenumber,\r\n    offeredcoursename: coursename,\r\n    semester: semester,\r\n    reqcoursenumber : coursenumberautocomplete,\r\n    reqcoursename : coursenameautocomplete\r\n  };\r\n  if (localStorage.getItem(\"token\")) {\r\n    if(coursenameautocomplete==\"\" && coursenumberautocomplete==\"\"){\r\n      return 0;\r\n    }\r\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\n    return axios\r\n      .post(path+\"CourseRequest\", data)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\n\r\nexport const RemoveCourseRequest = async (req) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"RemoveCourseRequest\", req)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const GetMatchChatCourse = async (matchId) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .get(path+\"GetMatchChatCourse\", {\r\n        params: {\r\n          id: matchId,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const InsertChatOnMatchCourse = async (req) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"InsertChatOnMatchCourse\", req)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const CheckForNewMatchCourse = async (req) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"CheckForNewMatchCourse\", req)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const GetWhatsapp = async (coursenumber, semester) => {\r\n    return axios\r\n      .get(path+\"GetWhatsappLinkByCourseAndSemester\",{\r\n        params: {\r\n          coursenumber: coursenumber,\r\n          semester: semester\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n};\r\n\r\nexport const UpdateWhatsapp = async (body) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"UpdateWhatsappLinkByCourseAndSemester\", body)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const InsertWhatsapp = async (body) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .post(path+\"SetWhatsappLinkByCourseAndSemester\", body)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}