{"ast":null,"code":"import axios from \"axios\"; //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\n\nexport const CreatePartnerRequest = async (grpcount, reqgrpcount, grpnum, coursenumber, coursename, semester) => {\n  let data = {\n    grpcount: Number(grpcount),\n    reqgrpcount: Number(reqgrpcount),\n    grpnum: grpnum,\n    coursenumber: coursenumber,\n    coursename: coursename,\n    semester: semester\n  };\n\n  if (localStorage.getItem(\"token\")) {\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\n    return axios.post(\"http://localhost:3001/PartnerRequest\", data).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c = CreatePartnerRequest;\nexport const CreateCourseRequest = async (reqcourseid, coursenumber, coursename, semester) => {\n  let data = {\n    reqcourseid: reqcourseid,\n    coursenumber: coursenumber,\n    coursename: coursename,\n    semester: semester\n  };\n\n  if (localStorage.getItem(\"token\")) {\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\n    return axios.post(\"http://localhost:3001/CourseRequest\", data).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c2 = CreateCourseRequest;\nexport const CreateGroupRequest = async (grp, reqgrp, coursenumber, coursename, semester) => {\n  let data = {\n    grp: grp,\n    reqgrp: reqgrp,\n    coursenumber: coursenumber,\n    coursename: coursename,\n    semester: semester\n  };\n\n  if (localStorage.getItem(\"token\")) {\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\n    return axios.post(\"http://localhost:3001/GroupRequest\", data).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c3 = CreateGroupRequest;\nexport const GetCourseAutoComplete = async text => {\n  if (localStorage.getItem(\"token\")) {\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\n    return axios.get(\"http://localhost:3001/GetCourseAutoComplete\", {\n      params: {\n        text: text\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c4 = GetCourseAutoComplete;\nexport const GetCourseRequests = async () => {\n  if (localStorage.getItem(\"token\")) {\n    return axios.get(\"http://localhost:3001/getAllRequests\").then(function (response) {\n      console.log(response.data);\n      return response.data;\n    }).catch(function (error) {\n      return error;\n    });\n  } else {\n    return {\n      errormsg: \"not connected\"\n    };\n  }\n};\n_c5 = GetCourseRequests;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CreatePartnerRequest\");\n$RefreshReg$(_c2, \"CreateCourseRequest\");\n$RefreshReg$(_c3, \"CreateGroupRequest\");\n$RefreshReg$(_c4, \"GetCourseAutoComplete\");\n$RefreshReg$(_c5, \"GetCourseRequests\");","map":{"version":3,"sources":["C:/Users/cohav/Desktop/PartnerTAU-1/FrontEnd/src/functions/serverfunction.js"],"names":["axios","CreatePartnerRequest","grpcount","reqgrpcount","grpnum","coursenumber","coursename","semester","data","Number","localStorage","getItem","post","then","response","catch","error","errormsg","CreateCourseRequest","reqcourseid","CreateGroupRequest","grp","reqgrp","GetCourseAutoComplete","text","get","params","GetCourseRequests","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,QAAP,EAAiBC,WAAjB,EAA8BC,MAA9B,EAAsCC,YAAtC,EAAoDC,UAApD,EAAgEC,QAAhE,KAA6E;AAC/G,MAAIC,IAAI,GAAG;AACTN,IAAAA,QAAQ,EAAEO,MAAM,CAACP,QAAD,CADP;AAETC,IAAAA,WAAW,EAAEM,MAAM,CAACN,WAAD,CAFV;AAGTC,IAAAA,MAAM,EAAEA,MAHC;AAITC,IAAAA,YAAY,EAAEA,YAJL;AAKTC,IAAAA,UAAU,EAACA,UALF;AAMTC,IAAAA,QAAQ,EAAEA;AAND,GAAX;;AAQA,MAAIG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC;AACA,WAAOX,KAAK,CACTY,IADI,CACC,sCADD,EACyCJ,IADzC,EAEJK,IAFI,CAEC,UAAUC,QAAV,EAAoB;AACxB,aAAOA,QAAQ,CAACN,IAAhB;AACD,KAJI,EAKJO,KALI,CAKE,UAAUC,KAAV,EAAiB;AACtB,aAAOA,KAAP;AACD,KAPI,CAAP;AAQD,GAVD,MAUO;AACL,WAAO;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;AACF,CAtBM;KAAMhB,oB;AAwBb,OAAO,MAAMiB,mBAAmB,GAAG,OAAOC,WAAP,EAAoBd,YAApB,EAAkCC,UAAlC,EAA8CC,QAA9C,KAA2D;AAC5F,MAAIC,IAAI,GAAG;AACTW,IAAAA,WAAW,EAAEA,WADJ;AAETd,IAAAA,YAAY,EAAEA,YAFL;AAGTC,IAAAA,UAAU,EAACA,UAHF;AAITC,IAAAA,QAAQ,EAAEA;AAJD,GAAX;;AAMA,MAAIG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC;AACA,WAAOX,KAAK,CACTY,IADI,CACC,qCADD,EACwCJ,IADxC,EAEJK,IAFI,CAEC,UAAUC,QAAV,EAAoB;AACxB,aAAOA,QAAQ,CAACN,IAAhB;AACD,KAJI,EAKJO,KALI,CAKE,UAAUC,KAAV,EAAiB;AACtB,aAAOA,KAAP;AACD,KAPI,CAAP;AAQD,GAVD,MAUO;AACL,WAAO;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;AACF,CApBM;MAAMC,mB;AAsBb,OAAO,MAAME,kBAAkB,GAAG,OAAOC,GAAP,EAAYC,MAAZ,EAAoBjB,YAApB,EAAkCC,UAAlC,EAA8CC,QAA9C,KAA2D;AAC3F,MAAIC,IAAI,GAAG;AACTa,IAAAA,GAAG,EAAEA,GADI;AAETC,IAAAA,MAAM,EAAEA,MAFC;AAGTjB,IAAAA,YAAY,EAAEA,YAHL;AAITC,IAAAA,UAAU,EAAEA,UAJH;AAKTC,IAAAA,QAAQ,EAAEA;AALD,GAAX;;AAOA,MAAIG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC;AACA,WAAOX,KAAK,CACTY,IADI,CACC,oCADD,EACuCJ,IADvC,EAEJK,IAFI,CAEC,UAAUC,QAAV,EAAoB;AACxB,aAAOA,QAAQ,CAACN,IAAhB;AACD,KAJI,EAKJO,KALI,CAKE,UAAUC,KAAV,EAAiB;AACtB,aAAOA,KAAP;AACD,KAPI,CAAP;AAQD,GAVD,MAUO;AACL,WAAO;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;AACF,CArBM;MAAMG,kB;AAuBb,OAAO,MAAMG,qBAAqB,GAAG,MAAOC,IAAP,IAAgB;AACnD,MAAId,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC;AACA,WAAOX,KAAK,CACTyB,GADI,CACA,6CADA,EAC+C;AAClDC,MAAAA,MAAM,EAAE;AACNF,QAAAA,IAAI,EAAEA;AADA;AAD0C,KAD/C,EAMJX,IANI,CAMC,UAAUC,QAAV,EAAoB;AACxB,aAAOA,QAAQ,CAACN,IAAhB;AACD,KARI,EASJO,KATI,CASE,UAAUC,KAAV,EAAiB;AACtB,aAAOA,KAAP;AACD,KAXI,CAAP;AAYD,GAdD,MAcO;AACL,WAAO;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;AACF,CAlBM;MAAMM,qB;AAoBb,OAAO,MAAMI,iBAAiB,GAAG,YAAY;AAC3C,MAAIjB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC,WAAOX,KAAK,CACTyB,GADI,CACA,sCADA,EAEJZ,IAFI,CAEC,UAAUC,QAAV,EAAoB;AACxBc,MAAAA,OAAO,CAACC,GAAR,CAAYf,QAAQ,CAACN,IAArB;AACA,aAAOM,QAAQ,CAACN,IAAhB;AACD,KALI,EAMJO,KANI,CAME,UAAUC,KAAV,EAAiB;AACtB,aAAOA,KAAP;AACD,KARI,CAAP;AASD,GAVD,MAUO;AACL,WAAO;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;AACF,CAdM;MAAMU,iB","sourcesContent":["import axios from \"axios\";\r\n\r\n//axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\n\r\nexport const CreatePartnerRequest = async (grpcount, reqgrpcount, grpnum, coursenumber, coursename, semester) => {\r\n  let data = {\r\n    grpcount: Number(grpcount),\r\n    reqgrpcount: Number(reqgrpcount),\r\n    grpnum: grpnum,\r\n    coursenumber: coursenumber,\r\n    coursename:coursename,\r\n    semester: semester,\r\n  };\r\n  if (localStorage.getItem(\"token\")) {\r\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\n    return axios\r\n      .post(\"http://localhost:3001/PartnerRequest\", data)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const CreateCourseRequest = async (reqcourseid, coursenumber, coursename, semester) => {\r\n  let data = {\r\n    reqcourseid: reqcourseid,\r\n    coursenumber: coursenumber,\r\n    coursename:coursename,\r\n    semester: semester,\r\n  };\r\n  if (localStorage.getItem(\"token\")) {\r\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\n    return axios\r\n      .post(\"http://localhost:3001/CourseRequest\", data)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const CreateGroupRequest = async (grp, reqgrp, coursenumber, coursename, semester) => {\r\n  let data = {\r\n    grp: grp,\r\n    reqgrp: reqgrp,\r\n    coursenumber: coursenumber,\r\n    coursename: coursename,\r\n    semester: semester,\r\n  };\r\n  if (localStorage.getItem(\"token\")) {\r\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\n    return axios\r\n      .post(\"http://localhost:3001/GroupRequest\", data)\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const GetCourseAutoComplete = async (text) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    //axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + (localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\");\r\n    return axios\r\n      .get(\"http://localhost:3001/GetCourseAutoComplete\", {\r\n        params: {\r\n          text: text,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};\r\n\r\nexport const GetCourseRequests = async () => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return axios\r\n      .get(\"http://localhost:3001/getAllRequests\")\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  } else {\r\n    return { errormsg: \"not connected\" };\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}